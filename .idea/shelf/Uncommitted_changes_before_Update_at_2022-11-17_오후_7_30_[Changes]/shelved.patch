Index: app/src/main/java/com/lx/api/BasicApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lx.api\r\n\r\nimport android.util.Log\r\nimport com.lx.data.*\r\nimport okhttp3.Interceptor\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.logging.HttpLoggingInterceptor\r\nimport retrofit2.Call\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport retrofit2.http.*\r\nimport java.lang.Exception\r\nimport java.security.SecureRandom\r\nimport java.security.cert.CertificateException\r\nimport java.security.cert.X509Certificate\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport java.util.concurrent.TimeUnit\r\nimport javax.net.ssl.*\r\nimport kotlin.collections.HashMap\r\n\r\n/**\r\n * 웹서버 요청/응답을 처리하기 위한 기본 API\r\n */\r\ninterface BasicApi {\r\n\r\n    /**\r\n     * POST 방식으로 멤버 로그인 요청 / 사용가능\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/memberLogin\")\r\n    fun postMemberLogin(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"memberId\") memberId: String,\r\n        @Field(\"memberPw\") memberPw: String\r\n    ): Call<MemberListResponse>\r\n\r\n    /**\r\n     * POST 방식으로 멤버 회원가입 요청 / 사용가능\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/memberAdd\")\r\n    fun postMemberAdd(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"memberId\") memberId: String,\r\n        @Field(\"memberName\") memberName: String,\r\n        @Field(\"memberPw\") memberPw: String,\r\n        @Field(\"memberAddress\") memberAddress: String,\r\n        @Field(\"memberImage\") memberImage: String\r\n    ): Call<MemberListResponse>\r\n\r\n    /**\r\n     * POST 방식으로 멤버 비밀번호찾기 요청\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/memberFindPw\")\r\n    fun postMemberFindPw(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"memberMobile\") memberMobile: String,\r\n        @Field(\"memberName\") memberName: String\r\n    ): Call<MemberListResponse>\r\n\r\n    /**\r\n     * POST 방식으로 아이디 중복체크 요청\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/memberIdOverlap\")\r\n    fun postMemberCheckId(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"memberId\") memberId: String\r\n    ): Call<MemberListResponse>\r\n\r\n    /**\r\n     * POST 방식으로 멤버 정보수정 요청\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/memberUpdate\")\r\n    fun postMemberUpdate(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"memberNo\") memberNo: String,\r\n        @Field(\"memberAddress\") memberAddress: String,\r\n        @Field(\"memberImage\") memberImage: String,\r\n        @Field(\"memberName\") memberName: String\r\n    ): Call<MemberListResponse>\r\n\r\n    /**\r\n     * GET 방식으로 주변 펫시터 요청 / 사용가능\r\n     */\r\n\r\n    @GET(\"care/memberDelete\")\r\n    fun getCareList(\r\n        @Query(\"requestCode\") requestCode: String,\r\n        @Query(\"carex1\") carex1: Int,\r\n        @Query(\"carex2\") carex2: Int,\r\n        @Query(\"carey1\") carey1: Int,\r\n        @Query(\"carey2\") carey2: Int\r\n    ): Call<CareListResponse>\r\n\r\n    /**\r\n     * GET 방식으로 주변 펫시터 요청 테스트@@ / 사용가능\r\n     */\r\n\r\n    @GET(\"/care/listTest\")\r\n    fun getCareListTest(\r\n        @Query(\"requestCode\") requestCode: String\r\n    ): Call<CareListResponse>\r\n\r\n\r\n\r\n    /**\r\n     * GET 방식으로  개리스트 요청\r\n     */\r\n\r\n    @GET(\"care/petList\")\r\n    fun getPetFilter(\r\n        @Query(\"requestCode\") requestCode: String,\r\n        @Query(\"memberNo\") memberNo: String\r\n    ): Call<DogListResponse>\r\n\r\n    /**\r\n     * GET 방식으로 개목록 요청\r\n     */\r\n    @FormUrlEncoded\r\n    @POST(\"care/petAdd\")\r\n    fun petAdd(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"memberNo\") memberNo: String,\r\n        @Field(\"dogName\") dogName: String,\r\n        @Field(\"dogGender\") dogGender: String,\r\n        @Field(\"dogAge\") dogAge: String,\r\n        @Field(\"dogCharacter\") dogCharacter: String,\r\n        @Field(\"dogImage\") dogImage: String,\r\n        @Field(\"dogEducation\") dogEducation: String,\r\n        @Field(\"dogBreed\") dogBreed: String\r\n        ): Call<DogListResponse>\r\n\r\n    /**\r\n     * POST 방식으로 시부레  개좀 맡아달라고\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/acrAdd\")\r\n    fun acrAdd(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"memberNo\") memberNo: String,\r\n        @Field(\"careNo\") careNo: String,\r\n        @Field(\"dogNo\") dogNo: String,\r\n        @Field(\"startTime\") startTime: String,\r\n        @Field(\"endTime\") endTime: String,\r\n        @Field(\"assignTitle\") assignTitle: String,\r\n        @Field(\"assignContent\") assignContent: String\r\n    ): Call<AcrListResponse>\r\n\r\n    /**\r\n     * GET 방식으로  선택요청 할일 추가\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/lastInsert\")\r\n    fun lastInsert(\r\n        @Field(\"requestCode\") requestCode: String\r\n    ): Call<LastInsertResponse>\r\n\r\n    /**\r\n     * GET 방식으로  선택요청 할일 추가\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/awrTodoAdd\")\r\n    fun awrTodoAdd(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"awrn\") awrn: String,\r\n        @Field(\"todoNo\") todoNo: Int\r\n    ): Call<AwrTodoResponse>\r\n    /**\r\n     * GET 방식으로  선택요청 할일 추가\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/acrTodoAdd\")\r\n    fun acrTodoAdd(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"acrn\") acrn: String,\r\n        @Field(\"todoNo\") todoNo: Int\r\n    ): Call<AcrTodoResponse>\r\n\r\n\r\n    /**\r\n     * POST 방식으로 돌봄 주변신청 보내기\r\n     */\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"care/awrAdd\")\r\n    fun awrAdd(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"assignContent\") assignContent: String,\r\n        @Field(\"memberNo\") memberNo: String,\r\n        @Field(\"startTime\") startTime: String,\r\n        @Field(\"endTime\") endTime: String,\r\n        @Field(\"assignTitle\") assignTitle: String,\r\n        @Field(\"writeTime\") writeTime: String,\r\n        @Field(\"lat\") lat: String,\r\n        @Field(\"lng\") lng: String,\r\n        @Field(\"dogNo\") dogNo: String\r\n    ): Call<AwrListResponse>\r\n\r\n    // 맡김이가 쓴 글 리스트트\r\n   @GET(\"care/awrList\")\r\n    fun getawrFilter(\r\n        @Query(\"requestCode\") requestCode: String,\r\n        @Query(\"memberNo\") memberNo: String\r\n    ): Call<AwrListResponse>\r\n\r\n    /**\r\n     * POST 방식으로 개수정 보내기\r\n     */\r\n    @FormUrlEncoded\r\n    @POST(\"care/dogUpdate\")\r\n    fun postDogUpdate(\r\n        @Field(\"requestCode\") requestCode: String,\r\n        @Field(\"dogAge\") dogAge: String,\r\n        @Field(\"dogCharacter\") dogCharacter: String,\r\n        @Field(\"dogEducation\") dogEducation: String,\r\n        @Field(\"dogBreed\") dogBreed: String,\r\n        @Field(\"dogGender\") dogGender: String,\r\n        @Field(\"dogImage\") dogImage: String,\r\n        @Field(\"dogName\") dogName: String,\r\n        @Field(\"dogNo\") dogNo: String,\r\n        @Field(\"memberNo\") memberNo: String\r\n    ): Call<DogListResponse>\r\n\r\n\r\n    /**\r\n     * 파일 업로드 요청 / 사용하자\r\n     */\r\n\r\n    @Multipart\r\n    @POST(\"/care/upload\")\r\n    fun uploadFile(\r\n        @Part file: MultipartBody.Part,\r\n        @Part(value=\"params\", encoding=\"UTF-8\") params: HashMap<String,String> = hashMapOf()\r\n    ): Call<FileUploadResponse>\r\n\r\n\r\n\r\n}\r\n\r\nclass BasicClient {\r\n\r\n    companion object {\r\n        const val TAG = \"BasicClient\"\r\n\r\n        private var instance : BasicApi? = null\r\n\r\n        val api: BasicApi\r\n            get() {\r\n                return getInstance()\r\n            }\r\n\r\n        @Synchronized\r\n        fun getInstance(): BasicApi {\r\n            if (instance == null)\r\n                instance = create()\r\n            return instance as BasicApi\r\n        }\r\n\r\n        // 프로토콜\r\n        private const val PROTOCOL = \"http\"\r\n\r\n        // 기본 URL\r\n        private const val BASE_URL = \"http://192.168.0.15:8001/\"\r\n\r\n        // 헤더 속성\r\n        private const val CLIENT_ID = \"\"\r\n        private const val CLIENT_SECRET = \"\"\r\n        var userId:String = \"\"\r\n\r\n        fun create(): BasicApi {\r\n            val httpLoggingInterceptor = HttpLoggingInterceptor()\r\n            httpLoggingInterceptor.level = HttpLoggingInterceptor.Level.BODY\r\n\r\n            val headerInterceptor = Interceptor {\r\n                val request = it.request()\r\n                    .newBuilder()\r\n                    .addHeader(\"X-Client-Id\", CLIENT_ID)\r\n                    .addHeader(\"X-Client-Secret\", CLIENT_SECRET)\r\n                    .addHeader(\"X-Client-UserId\", userId)\r\n                    .build()\r\n                return@Interceptor it.proceed(request)\r\n            }\r\n\r\n            val clientBuilder = OkHttpClient.Builder()\r\n\r\n            if (PROTOCOL == \"https\") {\r\n\r\n                val x509TrustManager: X509TrustManager = object : X509TrustManager {\r\n                    override fun getAcceptedIssuers(): Array<X509Certificate> {\r\n                        val x509Certificates = arrayOf<X509Certificate>()\r\n                        return x509Certificates\r\n                    }\r\n\r\n                    @Throws(CertificateException::class)\r\n                    override fun checkServerTrusted(chain: Array<X509Certificate>, authType: String) {\r\n                        Log.d(TAG, \": authType: $authType\")\r\n                    }\r\n\r\n                    @Throws(CertificateException::class)\r\n                    override fun checkClientTrusted(chain: Array<X509Certificate>, authType: String) {\r\n                        Log.d(TAG, \": authType: $authType\")\r\n                    }\r\n                }\r\n\r\n                try {\r\n                    val sslContext = SSLContext.getInstance(\"TLS\")\r\n                    sslContext.init(null, trustAllCerts, SecureRandom())\r\n                    val sslSocketFactory = sslContext.socketFactory\r\n                    clientBuilder.sslSocketFactory(sslSocketFactory, x509TrustManager)\r\n                } catch (e: Exception) {\r\n                    e.printStackTrace()\r\n                }\r\n\r\n                clientBuilder.hostnameVerifier(RelaxedHostNameVerifier())\r\n\r\n            }\r\n\r\n            clientBuilder.addInterceptor(headerInterceptor)\r\n            clientBuilder.addInterceptor(httpLoggingInterceptor)\r\n            clientBuilder.callTimeout(60, TimeUnit.SECONDS)       // 호출 타임아웃 시간 설정 60초\r\n            clientBuilder.connectTimeout(60, TimeUnit.SECONDS)    // 연결 타임아웃 시간 설정 60초\r\n            clientBuilder.readTimeout(60, TimeUnit.SECONDS)\r\n            clientBuilder.writeTimeout(60, TimeUnit.SECONDS)\r\n\r\n            val client = clientBuilder.build()\r\n\r\n            return Retrofit.Builder()\r\n                .baseUrl(BASE_URL)\r\n                .client(client)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build()\r\n                .create(BasicApi::class.java)\r\n        }\r\n\r\n        private val trustAllCerts = arrayOf<TrustManager>(object : X509TrustManager {\r\n            override fun getAcceptedIssuers(): Array<X509Certificate> {\r\n                return arrayOf()\r\n            }\r\n\r\n            @Throws(CertificateException::class)\r\n            override fun checkClientTrusted(chain: Array<X509Certificate>, authType: String) {}\r\n\r\n            @Throws(CertificateException::class)\r\n            override fun checkServerTrusted(chain: Array<X509Certificate>, authType: String) {}\r\n        })\r\n\r\n        class RelaxedHostNameVerifier : HostnameVerifier {\r\n            override fun verify(hostname: String, session: SSLSession): Boolean {\r\n                return true\r\n            }\r\n        }\r\n\r\n        private var format = SimpleDateFormat(\"yyyyMMddHHmmssSSS\", Locale.KOREAN)\r\n        private var seqCode = 0\r\n\r\n\r\n        /**\r\n         * 요청 코드 생성\r\n         */\r\n        @Synchronized\r\n        fun generateRequestCode(): String {\r\n            seqCode += 1\r\n            if (seqCode > 999) {\r\n                seqCode = 1\r\n            }\r\n\r\n            var seqCodeStr = seqCode.toString()\r\n            if (seqCodeStr.length == 1) {\r\n                seqCodeStr = \"00$seqCodeStr\"\r\n            } else if (seqCodeStr.length == 2) {\r\n                seqCodeStr = \"0$seqCodeStr\"\r\n            }\r\n\r\n            val date = Date()\r\n            val dateStr = format.format(date)\r\n\r\n            return dateStr + seqCodeStr\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lx/api/BasicApi.kt b/app/src/main/java/com/lx/api/BasicApi.kt
--- a/app/src/main/java/com/lx/api/BasicApi.kt	(revision da89dab37a8ec3b2c4c33a8d65fdc38764a0b204)
+++ b/app/src/main/java/com/lx/api/BasicApi.kt	(date 1668575258848)
@@ -274,7 +274,7 @@
         private const val PROTOCOL = "http"
 
         // 기본 URL
-        private const val BASE_URL = "http://192.168.0.15:8001/"
+        private const val BASE_URL = "http://192.168.0.9:8001/"
 
         // 헤더 속성
         private const val CLIENT_ID = ""
Index: app/src/main/java/com/lx/project5/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lx.project5\r\n\r\nimport android.Manifest\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.DialogInterface\r\nimport android.graphics.Bitmap\r\nimport android.location.Location\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.os.Looper\r\nimport android.util.Log\r\nimport android.view.MotionEvent\r\nimport android.view.View\r\nimport android.view.inputmethod.InputMethodManager\r\nimport android.widget.EditText\r\nimport android.widget.Toast\r\nimport com.google.android.gms.location.*\r\nimport com.google.android.gms.maps.CameraUpdateFactory\r\nimport com.google.android.gms.maps.GoogleMap\r\nimport com.google.android.gms.maps.SupportMapFragment\r\nimport com.google.android.gms.maps.model.*\r\nimport com.lx.api.BasicClient\r\nimport com.lx.data.CareListResponse\r\nimport com.lx.data.FileUploadResponse\r\nimport com.lx.project5.databinding.ActivityMainBinding\r\nimport com.permissionx.guolindev.PermissionX\r\nimport okhttp3.MediaType.Companion.toMediaTypeOrNull\r\nimport okhttp3.MultipartBody\r\nimport okhttp3.RequestBody.Companion.asRequestBody\r\nimport org.json.JSONArray\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport java.io.File\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\nimport java.util.*\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    // 주소 바꿔야 하는곳 / BasicApi, myPage\r\n    lateinit var binding: ActivityMainBinding\r\n\r\n    var locationClient: FusedLocationProviderClient? = null;\r\n\r\n    lateinit var map: GoogleMap\r\n\r\n    var myMarker: Marker? = null\r\n\r\n    enum class ScreenItem {\r\n        ITEM1,\r\n        ITEM2,\r\n        ITEM3,\r\n        ITEMmyPage,\r\n        ITEMcareInfo,\r\n        ITEMaddDog,\r\n        ITEMassess,\r\n        ITEMcareMain,\r\n        ITEMcareTodolist,\r\n        ITEMcomplete,\r\n        ITEMeditDog,\r\n        ITEMjoin1,\r\n        ITEMjoin2,\r\n        ITEMlogin,\r\n        ITEMupdate,\r\n        ITEMpetInfo,\r\n        ITEMpay,\r\n        ITEMreservation,\r\n        ITEMwrite,\r\n        ITEMwriteList,\r\n        ITEMend,\r\n        ITEMdogList,\r\n        ITEMwrite2,\r\n        ITEMwriteSelect\r\n    }\r\n\r\n    override fun dispatchTouchEvent(ev: MotionEvent?): Boolean {\r\n        val imm: InputMethodManager = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager\r\n        imm.hideSoftInputFromWindow(currentFocus?.windowToken, 0)\r\n\r\n        if(currentFocus is EditText) {\r\n            currentFocus!!.clearFocus()\r\n        }\r\n\r\n        return super.dispatchTouchEvent(ev)\r\n    }\r\n\r\n    val dateFormat1 = SimpleDateFormat(\"yyyyMMddHHmmss\")\r\n    var filename: String? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.cardView.setOnClickListener{\r\n            onFragmentChanged(ScreenItem.ITEMcareInfo)\r\n        }\r\n        // 주변에 돌봄요청 버튼 눌렀을 때\r\n        binding.writeButton2.setOnClickListener {\r\n            onFragmentChanged(ScreenItem.ITEMwrite2)\r\n        }\r\n\r\n        //하단 탭의 버튼을 눌렀을때\r\n        binding.bottomNavigationView.setOnNavigationItemSelectedListener {\r\n            when(it.itemId) {\r\n                R.id.tab1 -> {\r\n                    onFragmentChanged(ScreenItem.ITEM1)\r\n                }\r\n                R.id.tab2 -> {\r\n                    onFragmentChanged(ScreenItem.ITEM3)\r\n                }\r\n                R.id.tab3 -> {\r\n                    onFragmentChanged(ScreenItem.ITEMwrite)\r\n                }\r\n                R.id.tab4 -> {\r\n                    if(AppData.loginData?.memberId == null){\r\n                        onFragmentChanged(ScreenItem.ITEMlogin)\r\n                    }else if (AppData.loginData?.memberId != null){\r\n                        onFragmentChanged(ScreenItem.ITEMmyPage)\r\n                    }\r\n\r\n                }\r\n            }\r\n            return@setOnNavigationItemSelectedListener true\r\n        }\r\n        //화면이 보일 때 첫 화면 보여주기\r\n       // onFragmentChanged(ScreenItem.ITEM1)\r\n\r\n        binding.cardView.visibility = View.GONE\r\n        // 위험권한 요청하기\r\n        PermissionX.init(this)\r\n            .permissions(\r\n                Manifest.permission.ACCESS_FINE_LOCATION,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION\r\n            )\r\n            .request { allGranted, grantedList, deniedList ->\r\n                if (allGranted) {\r\n                    showToast(\"모든 권한 부여됨.\")\r\n                } else {\r\n                    showToast(\"거부된 권한 있음.\")\r\n                }\r\n            }\r\n\r\n        // 지도 초기화하기\r\n        val mapFragment = supportFragmentManager.findFragmentById(R.id.map) as SupportMapFragment\r\n        mapFragment.getMapAsync {\r\n            map = it\r\n\r\n            // 내 위치 요청하기\r\n            requestLocation()\r\n\r\n            // 마커 클릭 시 처리\r\n//            map.setOnMarkerClickListener {\r\n//                // showToast(\"마커 클릭됨 : ${it.tag}, ${it.title}\")\r\n//\r\n//                // 필요시 다른 화면으로 이동 (tag 정보를 이용해서 구분함)\r\n//\r\n//                binding.cardView.visibility = View.VISIBLE\r\n//\r\n//                true\r\n//            }\r\n\r\n            // 지도 클릭 시 처리\r\n            map.setOnMapClickListener {\r\n                //showToast(\"지도 클릭됨 : ${it.latitude}, ${it.longitude}\")\r\n                //카드뷰 안보이게\r\n                binding.cardView.visibility = View.GONE\r\n            }\r\n\r\n            // 보고있는 지도 영역 구분\r\n            map.setOnCameraIdleListener {\r\n                val bounds = map.projection.visibleRegion.latLngBounds\r\n                //showToast(\"좌상단 : ${bounds.northeast}, ${bounds.southwest}\")\r\n\r\n                val zoomLevel = map.cameraPosition.zoom\r\n                println(\"zoomLevel : ${zoomLevel}\")\r\n            }\r\n\r\n            // 근처 지도 마커 활성화\r\n            showNearLocationMarker(map)\r\n        }\r\n\r\n    }\r\n    fun onFragmentChanged(index:ScreenItem) {\r\n        when(index) {\r\n            ScreenItem.ITEM1 -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, FirstFragment()).commit()\r\n            }\r\n            ScreenItem.ITEM2 -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, SecondFragment()).commit()\r\n            }\r\n            ScreenItem.ITEM3 -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, CareMainFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMmyPage -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, MyPageFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMcareInfo -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, CareInfoFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMaddDog -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, AddDogFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMassess -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, AssessFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMcareMain -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, CareMainFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMcareTodolist -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, CareTodolistFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMcomplete -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, CompleteFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMpetInfo -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, PetInfoFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMeditDog -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, EditDogFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMjoin1 -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, Join1Fragment()).commit()\r\n            }\r\n            ScreenItem.ITEMjoin2 -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, Join2Fragment()).commit()\r\n            }\r\n            ScreenItem.ITEMlogin -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, LoginFragment()).commit()\r\n            }\r\n\r\n            ScreenItem.ITEMupdate -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, MemberInfoUpdateFragment()).commit()\r\n            }\r\n\r\n            ScreenItem.ITEMpay -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, LoginFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMreservation -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, ReservationFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMwrite -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, WriteFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMwriteList -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, WriteListFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMend -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, EndFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMdogList -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, DogListFragment()).commit()\r\n            }\r\n            ScreenItem.ITEMwrite2 -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, Write2Fragment()).commit()\r\n            }\r\n            ScreenItem.ITEMwriteSelect -> {\r\n                supportFragmentManager.beginTransaction().replace(R.id.container, SelectDogFragment()).commit()\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n    fun requestLocation() {\r\n\r\n        try {\r\n            // 가장 최근에 확인된 위치 알려주기\r\n            locationClient?.lastLocation?.addOnSuccessListener {\r\n\r\n            }\r\n\r\n\r\n            // 위치클라이언트 만들기\r\n            locationClient = LocationServices.getFusedLocationProviderClient(this)\r\n\r\n            // 내위치를 요청할 때 필요한 설정값\r\n            val locationRequest = LocationRequest.create()\r\n            locationRequest.run {\r\n                priority = LocationRequest.PRIORITY_HIGH_ACCURACY\r\n                interval = 30 * 1000\r\n            }\r\n\r\n            // 내위치를 받았을 때 자동으로 호출되는 함수\r\n            val locationCallback = object : LocationCallback() {\r\n                override fun onLocationResult(result: LocationResult) {\r\n                    super.onLocationResult(result)\r\n\r\n                    for ((index, location) in result.locations.withIndex()) {\r\n                        Log.v(\"lastkingdom\",\"${location.latitude},${location.longitude}\")\r\n                        showCurrentLocation(location)\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 내 위치 요청\r\n            locationClient?.requestLocationUpdates(locationRequest, locationCallback, Looper.myLooper())\r\n\r\n        } catch(e:SecurityException) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    // 내 위치의 지도 보여주기\r\n    fun showCurrentLocation(location: Location) {\r\n        val curPoint = LatLng(location.latitude, location.longitude)\r\n        map.moveCamera(CameraUpdateFactory.newLatLngZoom(curPoint, 17.0f))\r\n\r\n        showMarker(curPoint)\r\n\r\n    }\r\n\r\n    // 근처 마커 표시\r\n    fun showNearLocationMarker(map: GoogleMap) {\r\n        BasicClient.api.getCareListTest(\r\n            requestCode = \"1001\"\r\n        ).enqueue(object : Callback<CareListResponse> {\r\n            override fun onResponse(call: Call<CareListResponse>, response: Response<CareListResponse>) {\r\n                Log.v(\"lastkingdom\",\"근처 마커 활성화 요청 성공\")\r\n                val jsonArray = JSONArray(response.body()?.data)\r\n                for (i in 0 until jsonArray.length()) {\r\n                    Log.v(\"lastkingdom\",\"근처 마커 for문 진입\")\r\n                    var latitude = response.body()?.data?.get(i)?.careX\r\n                    var longitude = response.body()?.data?.get(i)?.careY\r\n\r\n                    Log.v(\"lastkingdom\",\"마커 위도 ${latitude.toString()}\")\r\n                    Log.v(\"lastkingdom\",\"마커 위도 ${longitude.toString()}\")\r\n\r\n                    Log.v(\"lastkingdom\",\"2\")\r\n                    // 1. 마커 옵션 설정 (만드는 과정)\r\n                    var makerOptions = MarkerOptions()\r\n                    makerOptions // LatLng에 대한 어레이를 만들어서 이용할 수도 있다.\r\n                        .position(LatLng(latitude!!, longitude!!))\r\n                        .title(response.body()?.data?.get(i)?.careNo.toString()) // 타이틀.\r\n\r\n                    // 2. 마커 생성 (마커를 나타냄)\r\n                    map.addMarker(makerOptions)\r\n\r\n                    // 마커클릭\r\n                    map.setOnMarkerClickListener {\r\n\r\n                        binding.className.text = response.body()?.data?.get(i)?.careName.toString()\r\n                        binding.classAddress.text = response.body()?.data?.get(i)?.careAddress.toString()\r\n                        binding.classSelf.text = response.body()?.data?.get(i)?.careExperience.toString()\r\n                        WriteSaveData.savecareNo = response.body()?.data?.get(i)?.careNo.toString()\r\n                        binding.cardView.visibility = View.VISIBLE\r\n\r\n                        true\r\n                    }\r\n                }\r\n            }\r\n            override fun onFailure(call: Call<CareListResponse>, t: Throwable) {\r\n                Log.v(\"lastkingdom\",\"근처 마커 활성화 요청 실패\")\r\n            }\r\n        })\r\n    }\r\n\r\n    fun showMarker(curPoint: LatLng) {\r\n        myMarker?.remove()\r\n\r\n        MarkerOptions().also {\r\n            it.position(curPoint)\r\n            it.title(\"내위치\")\r\n            it.icon(BitmapDescriptorFactory.fromResource(R.drawable.dogicon))\r\n\r\n\r\n            myMarker = map.addMarker(it)\r\n            myMarker?.tag = \"1001\"\r\n        }\r\n\r\n    }\r\n\r\n    //게시글에서 사진 찍은거 저장하기\r\n    fun saveFile(bitmap: Bitmap) {\r\n        filename = dateFormat1.format(Date()) + \".jpg\"\r\n        bitmap?.apply {\r\n            openFileOutput(filename, Context.MODE_PRIVATE).use {\r\n                this.compress(Bitmap.CompressFormat.JPEG, 100, it)\r\n                it.close()\r\n\r\n                showToast(\"이미지를 파일로 저장함 : ${filename}\")\r\n\r\n                uploadFile(filename!!)\r\n            }\r\n        }\r\n    }\r\n    fun uploadFile(filename:String){\r\n        // 저장한 파일에 대한 정보를 filePart로 만들기\r\n        val file = File(\"${filesDir}/${filename}\")\r\n        val filePart = MultipartBody.Part.createFormData(\r\n            \"photo\",\r\n            filename,\r\n            file.asRequestBody(\"images/jpg\".toMediaTypeOrNull())\r\n        )\r\n        // 추가 파라미터가 있는 경우\r\n        val params = hashMapOf<String, String>()\r\n\r\n        //api 에 있는 리스트 조회\r\n        BasicClient.api.uploadFile(\r\n            file = filePart,\r\n            params = params\r\n        ).enqueue(object : Callback<FileUploadResponse> {\r\n            override fun onResponse(call: Call<FileUploadResponse>, response: Response<FileUploadResponse>) {\r\n                response.body()?.output?.filename?.apply{\r\n                    AppData.filepath = this\r\n                }\r\n            }\r\n            override fun onFailure(call: Call<FileUploadResponse>, t: Throwable) {\r\n            }\r\n        })\r\n    }\r\n\r\n    fun showToast(message:String) {\r\n        Toast.makeText(this, message, Toast.LENGTH_LONG).show()\r\n    }\r\n\r\n    // 데이트폼\r\n    fun nowDate():String{\r\n        val now =  System.currentTimeMillis()\r\n        val simpleDateFormat = SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\", Locale.KOREAN).format(now)\r\n        return simpleDateFormat\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lx/project5/MainActivity.kt b/app/src/main/java/com/lx/project5/MainActivity.kt
--- a/app/src/main/java/com/lx/project5/MainActivity.kt	(revision da89dab37a8ec3b2c4c33a8d65fdc38764a0b204)
+++ b/app/src/main/java/com/lx/project5/MainActivity.kt	(date 1668575258879)
@@ -34,8 +34,7 @@
 import retrofit2.Response
 import java.io.File
 import java.text.SimpleDateFormat
-import java.time.LocalDateTime
-import java.time.format.DateTimeFormatter
+
 import java.util.*
 
 class MainActivity : AppCompatActivity() {
Index: app/src/main/res/layout/fragment_assess.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#FFFFFF\"\r\n    tools:context=\".AssessFragment\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/button11\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"46dp\"\r\n            android:layout_gravity=\"center_horizontal|center_vertical\"\r\n            android:background=\"#faf7f4\"\r\n            android:gravity=\"center_horizontal|center_vertical\"\r\n            android:text=\"리뷰작성\"\r\n            android:textAlignment=\"center\"\r\n            android:textSize=\"16sp\"\r\n            android:textStyle=\"normal|bold\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/personProfile\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:src=\"@drawable/person2\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/personName\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"160dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:text=\"김용현\"\r\n                android:textSize=\"18sp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/textView27\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"118dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:text=\"이용해주셔서 감사합니다.\"\r\n                android:textSize=\"13sp\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/textView24\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"30dp\"\r\n                    android:layout_marginTop=\"30dp\"\r\n                    android:text=\"별점\"\r\n                    android:textSize=\"16sp\" />\r\n\r\n                <RatingBar\r\n                    android:id=\"@+id/ratingBar2\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\" />\r\n\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/textView28\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"30dp\"\r\n                    android:text=\"돌보미에게 한 마디\"\r\n                    android:textSize=\"16sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/textView29\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"4dp\"\r\n                    android:text=\"다른 이용자들이 볼 수 있는 리뷰입니다.\"\r\n                    android:textSize=\"11sp\" />\r\n            </LinearLayout>\r\n\r\n            <EditText\r\n                android:id=\"@+id/reviewContent\"\r\n                android:layout_width=\"305dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"30dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"리뷰내용\" />\r\n\r\n        </LinearLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/backButton14\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:backgroundTint=\"#faf7f4\"\r\n        android:src=\"@drawable/arrow\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_assess.xml b/app/src/main/res/layout/fragment_assess.xml
--- a/app/src/main/res/layout/fragment_assess.xml	(revision da89dab37a8ec3b2c4c33a8d65fdc38764a0b204)
+++ b/app/src/main/res/layout/fragment_assess.xml	(date 1668575258891)
@@ -68,11 +68,14 @@
                     android:text="별점"
                     android:textSize="16sp" />
 
-                <RatingBar
-                    android:id="@+id/ratingBar2"
+                <TextView
+                    android:id="@+id/scope"
                     android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" />
-
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="75dp"
+                    android:layout_marginTop="30dp"
+                    android:text="★ ★ ★ ★ ★"
+                    android:textSize="16sp" />
             </LinearLayout>
 
             <LinearLayout
@@ -108,6 +111,35 @@
 
         </LinearLayout>
 
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_gravity="bottom"
+        android:orientation="horizontal"
+        android:padding="10dp">
+
+        <Button
+            android:id="@+id/completeButton3"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+
+            android:layout_gravity="bottom"
+            android:layout_marginRight="8dp"
+            android:background="@drawable/bold"
+            android:text="돌아가기" />
+
+        <Button
+            android:id="@+id/completeButton4"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="bottom"
+            android:layout_weight="1"
+            android:background="@drawable/pinkbutton"
+            android:text="작성완료"
+            android:textColor="#FFFFFF" />
+
     </LinearLayout>
 
     <ImageButton
Index: app/src/main/java/com/lx/project5/MyPageFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lx.project5\r\n\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport com.bumptech.glide.Glide\r\nimport com.lx.project5.databinding.FragmentFirstBinding\r\nimport com.lx.project5.databinding.FragmentMyPageBinding\r\n\r\nclass MyPageFragment : Fragment() {\r\n    var _binding: FragmentMyPageBinding? = null\r\n    val binding get() = _binding!!\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n        _binding = FragmentMyPageBinding.inflate(inflater, container, false)\r\n        initView()\r\n\r\n\r\n\r\n\r\n\r\n        binding.updateButton.setOnClickListener {\r\n            val curActivity = activity as MainActivity\r\n            curActivity.onFragmentChanged(MainActivity.ScreenItem.ITEMupdate)\r\n        }\r\n\r\n        binding.myWriteButton.setOnClickListener {\r\n            (activity as MainActivity).onFragmentChanged(MainActivity.ScreenItem.ITEMwriteList)\r\n        }\r\n\r\n        binding.goDogList.setOnClickListener {\r\n            (activity as MainActivity).onFragmentChanged(MainActivity.ScreenItem.ITEMdogList)\r\n        }\r\n        return binding.root\r\n    }\r\n    fun initView(){\r\n        AppData.loginData?.apply{\r\n            this.memberImage?.let{\r\n                val uri = Uri.parse(\"http://192.168.0.15:8001${memberImage}\")\r\n                Glide.with(binding.imageView2).load(uri).into(binding.imageView2)\r\n            }\r\n            binding.memberName.text = AppData.loginData?.memberId\r\n            binding.address.text = AppData.loginData?.memberName\r\n            binding.textView9.text = AppData.loginData?.memberAddress\r\n\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lx/project5/MyPageFragment.kt b/app/src/main/java/com/lx/project5/MyPageFragment.kt
--- a/app/src/main/java/com/lx/project5/MyPageFragment.kt	(revision da89dab37a8ec3b2c4c33a8d65fdc38764a0b204)
+++ b/app/src/main/java/com/lx/project5/MyPageFragment.kt	(date 1668575267679)
@@ -39,7 +39,7 @@
     fun initView(){
         AppData.loginData?.apply{
             this.memberImage?.let{
-                val uri = Uri.parse("http://192.168.0.15:8001${memberImage}")
+                val uri = Uri.parse("http://192.168.0.9:8001${memberImage}")
                 Glide.with(binding.imageView2).load(uri).into(binding.imageView2)
             }
             binding.memberName.text = AppData.loginData?.memberId
Index: app/src/main/java/com/lx/project5/EditDogFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lx.project5\r\n\r\nimport android.content.Intent\r\nimport android.graphics.Bitmap\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.provider.MediaStore\r\nimport android.text.Editable\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.activity.result.contract.ActivityResultContracts\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.bumptech.glide.Glide\r\nimport com.lx.api.BasicClient\r\nimport com.lx.data.DogListResponse\r\nimport com.lx.project5.databinding.FragmentEditDogBinding\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\n\r\nclass EditDogFragment : Fragment() {\r\n    var _binding: FragmentEditDogBinding? = null\r\n    val binding get() = _binding!!\r\n    var bitmap: Bitmap? = null\r\n\r\n    //사진찍기 런처\r\n    val captureLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {\r\n        showToast(\"사진찍고 돌아옴\")\r\n\r\n        when(it.resultCode) {\r\n            AppCompatActivity.RESULT_OK -> {\r\n                bitmap = it.data?.extras?.get(\"data\") as Bitmap\r\n                binding.imageView30.setImageBitmap(bitmap)\r\n                val saveCapture = activity as MainActivity\r\n                saveCapture.saveFile(bitmap!!)\r\n\r\n\r\n            }\r\n            AppCompatActivity.RESULT_CANCELED -> {\r\n                showToast(\"취소함\")\r\n            }\r\n        }\r\n    }\r\n\r\n    //앨범에서 가져오기위한 런처\r\n    val albumLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) {\r\n        showToast(\"앨범에서 돌아옴\")\r\n\r\n        when(it.resultCode) {\r\n            AppCompatActivity.RESULT_OK -> {\r\n                it.data?.apply {\r\n                    val imageUri = this.data\r\n                    imageUri?.let {\r\n                        val cr = requireActivity().contentResolver\r\n                        bitmap = MediaStore.Images.Media.getBitmap(cr, it)\r\n                        binding.imageView30.setImageBitmap(bitmap)\r\n                        val saveCapture = activity as MainActivity\r\n                        saveCapture.saveFile(bitmap!!)\r\n                    }\r\n                }\r\n            }\r\n            AppCompatActivity.RESULT_CANCELED -> {\r\n                showToast(\"앨범 선택 취소\")\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n        _binding = FragmentEditDogBinding.inflate(inflater, container, false)\r\n\r\n        initView()\r\n\r\n        binding.editButton.setOnClickListener {\r\n            editDog()\r\n        }\r\n        //앨범에서 가져오기 버튼 눌렀을 때\r\n        binding.photoButton2.setOnClickListener {\r\n            val albumIntent = Intent(Intent.ACTION_GET_CONTENT)\r\n            albumIntent.type = \"image/*\"\r\n            albumLauncher.launch(albumIntent)\r\n        }\r\n\r\n\r\n        return binding.root\r\n    }\r\n    fun editDog(){\r\n        val dogAge = binding.ageOutput2.getText().toString()\r\n        val dogCharacter = binding.characterInput2.getText().toString()\r\n        val dogEducation = binding.educationInput2.getText().toString()\r\n        val dogBreed = binding.typeOutput2.getText().toString()\r\n        val dogGender = binding.genderOutput2.getText().toString()\r\n        val dogImage = AppData.filepath\r\n        val dogName= binding.nameOutput2.getText().toString()\r\n        val dogNo = AppData.selectedItem?.dogNo.toString()\r\n        val memberNo= AppData.selectedItem?.memberNo.toString()\r\n\r\n\r\n\r\n\r\n        BasicClient.api.postDogUpdate(\r\n            requestCode = \"1001\",\r\n            dogAge = dogAge,\r\n            dogCharacter = dogCharacter,\r\n            dogEducation = dogEducation,\r\n            dogBreed = dogBreed,\r\n            dogGender = dogGender,\r\n            dogImage = dogImage!!,\r\n            dogName = dogName,\r\n            dogNo = dogNo,\r\n            memberNo = memberNo\r\n        ).enqueue(object : Callback<DogListResponse> {\r\n            override fun onResponse(call: Call<DogListResponse>, response: Response<DogListResponse>) {\r\n\r\n            }\r\n            override fun onFailure(call: Call<DogListResponse>, t: Throwable) {\r\n                (activity as MainActivity).filename = null\r\n                (activity as MainActivity).onFragmentChanged(MainActivity.ScreenItem.ITEMmyPage)\r\n            }\r\n        })\r\n    }\r\n    fun showToast(message: String) {\r\n        Toast.makeText(activity, message, Toast.LENGTH_LONG).show()\r\n    }\r\n    fun initView(){\r\n        AppData.selectedItem?.apply{\r\n            this.dogImage?.let{\r\n                val uri = Uri.parse(\"http://192.168.0.15:8001${this.dogImage}\")\r\n                Glide.with(binding.imageView30).load(uri).into(binding.imageView30)\r\n            }\r\n            binding.nameOutput2.text = Editable.Factory.getInstance().newEditable(\"${AppData.selectedItem?.dogName}\")\r\n            binding.ageOutput2.text = Editable.Factory.getInstance().newEditable(\"${AppData.selectedItem?.dogAge}\")\r\n            binding.genderOutput2.text = Editable.Factory.getInstance().newEditable(\"${AppData.selectedItem?.dogGender}\")\r\n            binding.typeOutput2.text = Editable.Factory.getInstance().newEditable(\"${AppData.selectedItem?.dogBreed}\")\r\n            binding.educationInput2.text = Editable.Factory.getInstance().newEditable(\"${AppData.selectedItem?.dogEducation}\")\r\n            binding.characterInput2.text = Editable.Factory.getInstance().newEditable(\"${AppData.selectedItem?.dogCharacter}\")\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lx/project5/EditDogFragment.kt b/app/src/main/java/com/lx/project5/EditDogFragment.kt
--- a/app/src/main/java/com/lx/project5/EditDogFragment.kt	(revision da89dab37a8ec3b2c4c33a8d65fdc38764a0b204)
+++ b/app/src/main/java/com/lx/project5/EditDogFragment.kt	(date 1668575271937)
@@ -127,7 +127,7 @@
     fun initView(){
         AppData.selectedItem?.apply{
             this.dogImage?.let{
-                val uri = Uri.parse("http://192.168.0.15:8001${this.dogImage}")
+                val uri = Uri.parse("http://192.168.0.7:8001${this.dogImage}")
                 Glide.with(binding.imageView30).load(uri).into(binding.imageView30)
             }
             binding.nameOutput2.text = Editable.Factory.getInstance().newEditable("${AppData.selectedItem?.dogName}")
Index: app/src/main/java/com/lx/project5/PetAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lx.project5\r\n\r\nimport android.content.Context\r\nimport android.net.Uri\r\nimport android.view.LayoutInflater\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.lx.project5.databinding.DogItemBinding\r\n\r\nclass PetAdapter : RecyclerView.Adapter<PetAdapter.ViewHolder>(){\r\n    //각 아이템에 보여질 데이터를 담고 있는것\r\n    var items = ArrayList<PetData>()\r\n    var context: Context? = null\r\n\r\n    var listener: OnPetItemClickListener? = null\r\n    //리싸이클러뷰가 아이템 개수가 몇 개인지 물어볼때\r\n    override fun getItemCount(): Int = items.size\r\n    //각 아이템의 모양이 처음 만들어 질때\r\n    override fun onCreateViewHolder(parent : ViewGroup, viewType:Int): PetAdapter.ViewHolder{\r\n        val binding = DogItemBinding.inflate(LayoutInflater.from(parent.context),parent, false)\r\n        return ViewHolder(binding)\r\n    }\r\n    //이미 만들어진 아이템의 모양에 데이터만 설정할 때\r\n    override fun onBindViewHolder(holder: PetAdapter.ViewHolder, position: Int){\r\n        val item = items[position]\r\n        holder.setItem(item)\r\n    }\r\n    //각 아이템의 모양을 재사용하기 위해 만들어진 것\r\n    inner class ViewHolder(val binding: DogItemBinding):RecyclerView.ViewHolder(binding.root){\r\n        //데이터 설정\r\n        //하나의 아이템을 위한 데이터가 전달되었을 때 화면에 어떻게 표시할 지 설정\r\n        fun setItem(item: PetData){\r\n            //이미지 표시하기\r\n            item.dogImage?.apply{\r\n                val uri = Uri.parse(\"http://192.168.0.15:8001${this}\")\r\n                Glide.with(binding.gridPictureView).load(uri).into(binding.gridPictureView)\r\n            }\r\n\r\n            //강아지 이름\r\n            binding.dogNameOutput.text = item.dogName\r\n            //강아지 나이\r\n            binding.dogAgeOutput.text = item.dogAge.toString()\r\n            //강아지 성별\r\n            binding.dogGenderOutput.text = item.dogGender\r\n            //견종\r\n            binding.dogTypeOutput.text = item.dogBreed\r\n\r\n        }\r\n        init {\r\n            binding.root.setOnClickListener{\r\n                listener?.onItemClick(this,binding.root,adapterPosition)\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/lx/project5/PetAdapter.kt b/app/src/main/java/com/lx/project5/PetAdapter.kt
--- a/app/src/main/java/com/lx/project5/PetAdapter.kt	(revision da89dab37a8ec3b2c4c33a8d65fdc38764a0b204)
+++ b/app/src/main/java/com/lx/project5/PetAdapter.kt	(date 1668575275976)
@@ -33,7 +33,7 @@
         fun setItem(item: PetData){
             //이미지 표시하기
             item.dogImage?.apply{
-                val uri = Uri.parse("http://192.168.0.15:8001${this}")
+                val uri = Uri.parse("http://192.168.0.7:8001${this}")
                 Glide.with(binding.gridPictureView).load(uri).into(binding.gridPictureView)
             }
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/drawable/bold2.xml\" value=\"0.1825\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/drawable/pink_round_button.xml\" value=\"0.1465\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/drawable/round_button.xml\" value=\"0.1465\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_local.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_main.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_splash.xml\" value=\"0.25443786982248523\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/care_item.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/dog_item.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_add_dog.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_assess.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_info.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_item.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_todolist.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_complete.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_dog_list.xml\" value=\"0.19114583333333332\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_edit_dog.xml\" value=\"0.19114583333333332\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_end.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_first.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_join1.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_join2.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_login.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_member_info_update.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_my_page.xml\" value=\"0.32083333333333336\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_pay.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_pet_info.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_reservation.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_second.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_third.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_view_pager1.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_view_pager2.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_view_pager3.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write2.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write_list.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_writeandlist.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/layout/write_item.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_assess.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_info.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_main.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_todolist.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_complete.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_dog_location.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_edit_dog.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_pay.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_reservation.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_local.xml\" value=\"0.2994791666666667\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_main.xml\" value=\"0.26875\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_splash.xml\" value=\"0.26875\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/dog_item.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_add_dog.xml\" value=\"0.26875\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_info.xml\" value=\"0.26875\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_main.xml\" value=\"0.335\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_care_todolist.xml\" value=\"0.165\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_dog_info.xml\" value=\"0.20555555555555555\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_dog_list.xml\" value=\"0.1787037037037037\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_edit_dog.xml\" value=\"0.26875\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_join2.xml\" value=\"0.3509259259259259\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_member_info_update.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_my_page.xml\" value=\"0.26875\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_pet_info.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_select_dog.xml\" value=\"0.1787037037037037\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write2.xml\" value=\"0.335\" />\r\n        <entry key=\"..\\:/Users/khm24/FinalProject/app/src/main/res/layout/activity_main.xml\" value=\"0.26875\" />\r\n        <entry key=\"..\\:/Users/khm24/FinalProject/app/src/main/res/layout/fragment_view_pager1.xml\" value=\"0.12239583333333333\" />\r\n        <entry key=\"..\\:/Users/khm24/FinalProject/app/src/main/res/layout/fragment_view_pager2.xml\" value=\"0.12239583333333333\" />\r\n        <entry key=\"..\\:/Users/khm24/FinalProject/app/src/main/res/layout/fragment_view_pager3.xml\" value=\"0.45\" />\r\n        <entry key=\"..\\:/Users/kom59/AndroidStudioProjects/Pet/app/src/main/res/layout/activity_main.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/kom59/AndroidStudioProjects/Pet/app/src/main/res/layout/activity_splash.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/kom59/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_main.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1035\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/drawable/bold.xml\" value=\"0.1035\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/drawable/bold1.xml\" value=\"0.1035\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/drawable/bold3.xml\" value=\"0.1835\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.1035\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/drawable/pinkbutton.xml\" value=\"0.1835\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/activity_main.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/activity_splash.xml\" value=\"0.176\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_first.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_info.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_my_page.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_question.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_review.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_view_pager1.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_view_pager11.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_view_pager12.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_view_pager2.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/fragment_view_pager3.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/layout/review_item.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/zxxz0/AndroidStudioProjects/Pet/app/src/main/res/menu/menu_tab.xml\" value=\"0.24947916666666667\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"SvnBranchConfigurationManager\">\r\n    <option name=\"myConfigurationMap\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\">\r\n          <value>\r\n            <SvnBranchConfiguration>\r\n              <option name=\"trunkUrl\" value=\"https://14.55.65.162/svn/myweb/Pet\" />\r\n            </SvnBranchConfiguration>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision da89dab37a8ec3b2c4c33a8d65fdc38764a0b204)
+++ b/.idea/misc.xml	(date 1668575336061)
@@ -3,6 +3,7 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
+        <entry key="..\:/Users/KIMHYEOKJIN/AndroidStudioProjects/Pet2/app/src/main/res/layout/fragment_assess.xml" value="0.12864583333333332" />
         <entry key="..\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/drawable/bold2.xml" value="0.1825" />
         <entry key="..\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/drawable/pink_round_button.xml" value="0.1465" />
         <entry key="..\:/Users/black/AndroidStudioProjects/Pet1/app/src/main/res/drawable/round_button.xml" value="0.1465" />
@@ -50,7 +51,6 @@
         <entry key="..\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_pay.xml" value="0.3619791666666667" />
         <entry key="..\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_reservation.xml" value="0.3619791666666667" />
         <entry key="..\:/Users/choyd/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write.xml" value="0.36614583333333334" />
-        <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_local.xml" value="0.2994791666666667" />
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_main.xml" value="0.26875" />
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/activity_splash.xml" value="0.26875" />
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/dog_item.xml" value="0.5" />
@@ -66,6 +66,8 @@
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_my_page.xml" value="0.26875" />
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_pet_info.xml" value="0.25" />
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_select_dog.xml" value="0.1787037037037037" />
+        <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write.xml" value="0.25" />
+        <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write2.xml" value="0.25" />
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write.xml" value="0.25" />
         <entry key="..\:/Users/khm24/AndroidStudioProjects/Pet1/app/src/main/res/layout/fragment_write2.xml" value="0.335" />
         <entry key="..\:/Users/khm24/FinalProject/app/src/main/res/layout/activity_main.xml" value="0.26875" />
